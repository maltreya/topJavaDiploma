DROP TABLE IF EXISTS votes;
DROP TABLE IF EXISTS foods;
DROP TABLE IF EXISTS restaurants;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS users;
DROP SEQUENCE IF EXISTS global_seq;

CREATE SEQUENCE global_seq AS INTEGER START WITH 100000;

CREATE TABLE users
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE global_seq PRIMARY KEY,
    name       VARCHAR(255)            NOT NULL,
    email      VARCHAR(255)            NOT NULL,
    password   VARCHAR(255)            NOT NULL,
    registered TIMESTAMP DEFAULT now() NOT NULL,
    enabled    BOOLEAN   DEFAULT TRUE  NOT NULL
);

CREATE UNIQUE INDEX users_unique_email_idx ON users (email);

CREATE TABLE user_roles
(
    user_id INTEGER      NOT NULL,
    role    VARCHAR(255) NOT NULL,
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES isers (id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE global_seq PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT restaurant_unique_idx UNIQUE (name)
);

CREATE TABLE foods
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE global_seq PRIMARY KEY,
    prep_date     DATE DEFAULT now() NOT NULL,
    description   VARCHAR(255)       NOT NULL,
    price         DECIMAL(4, 2)      NOT NULL,
    restaurant_id INTEGER            NOT NULL,
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX food_unique_restaurant_prep_date_description_idx ON foods (restaurant_id, prep_date, description);

CREATE TABLE votes
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY SEQUENCE global_seq PRIMARY KEY,
    vote_date     DATE DEFAULT now() NOT NULL,
    user_id       INTEGER            NOT NULL,
    restaurant_id INTEGER            NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX vote_unique_user_vote_date_idx ON votes (user_id, vote_date)